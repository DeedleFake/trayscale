type {{.Class.Convert}} struct {
	*{{.Parent.Convert}}

	{{range .NamedChildren -}}
		{{.ID}} *{{.Class.Convert}}
	{{end}}
}

func New{{.Class.Convert}}({{.Parent.Constructor.Args.WithTypes}}) *{{.Class.Convert}} {
	{{- $init := initializer -}}
	{{range .Children -}}
		{{template "init.tmpl" ($init.Child .)}}
	{{end -}}

	parent := {{.Parent.Constructor}}({{.Parent.Constructor.Args}})
	{{range .Properties -}}
		parent.SetObjectProperty({{.Name | printf "%q"}}, {{if .WantsWidget}}{{.Value.Val}}{{else}}{{.Value}}{{end}})
	{{end -}}
	{{range $child := $init.Children -}}
		parent.{{$.Parent.AddChild $child.Child.Type $child.Var}}
	{{end}}

	return &{{.Class.Convert}}{
		{{.Parent.Short}}: parent,

		{{range .NamedChildren -}}
			{{.ID}}: {{.ID}},
		{{end}}
	}
}
